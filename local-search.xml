<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2020/11/15/JSON%E8%BD%AC%E6%8D%A2%E7%B1%BB/"/>
    <url>/2020/11/15/JSON%E8%BD%AC%E6%8D%A2%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="JSON转换类"><a href="#JSON转换类" class="headerlink" title="JSON转换类"></a>JSON转换类</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2> <pre><code class="hljs pom">&lt;!--    Jackson Json处理工具包--&gt;            &lt;dependency&gt;                &lt;groupId&gt;com.fasterxml.jackson.core&lt;&#x2F;groupId&gt;                &lt;artifactId&gt;jackson-databind&lt;&#x2F;artifactId&gt;                &lt;version&gt;$&#123;jackson.version&#125;&lt;&#x2F;version&gt;            &lt;&#x2F;dependency&gt; &lt;jackson.version&gt;2.4.2&lt;&#x2F;jackson.version&gt;</code></pre><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.bjsxt.commons;<span class="hljs-keyword">import</span> java.util.List;<span class="hljs-keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;<span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.JavaType;<span class="hljs-keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;<span class="hljs-comment">/**</span><span class="hljs-comment"> * JSON转换工具类</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">JsonUtils</span> </span>&#123;    <span class="hljs-comment">// 定义jackson对象</span>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> ObjectMapper MAPPER = <span class="hljs-keyword">new</span> ObjectMapper();    <span class="hljs-comment">/**</span><span class="hljs-comment">     * 将对象转换成json字符串。</span><span class="hljs-comment">     * &lt;p&gt;Title: pojoToJson&lt;/p&gt;</span><span class="hljs-comment">     * &lt;p&gt;Description: &lt;/p&gt;</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> data</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><span class="hljs-comment">     */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">objectToJson</span><span class="hljs-params">(Object data)</span> </span>&#123;    <span class="hljs-keyword">try</span> &#123;String string = MAPPER.writeValueAsString(data);<span class="hljs-keyword">return</span> string;&#125; <span class="hljs-keyword">catch</span> (JsonProcessingException e) &#123;e.printStackTrace();&#125;    <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    &#125;        <span class="hljs-comment">/**</span><span class="hljs-comment">     * 将json结果集转化为对象</span><span class="hljs-comment">     * </span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> jsonData json数据</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> clazz 对象中的object类型</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><span class="hljs-comment">     */</span>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; <span class="hljs-function">T <span class="hljs-title">jsonToPojo</span><span class="hljs-params">(String jsonData, Class&lt;T&gt; beanType)</span> </span>&#123;        <span class="hljs-keyword">try</span> &#123;            T t = MAPPER.readValue(jsonData, beanType);            <span class="hljs-keyword">return</span> t;        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;        e.printStackTrace();        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    &#125;        <span class="hljs-comment">/**</span><span class="hljs-comment">     * 将json数据转换成pojo对象list</span><span class="hljs-comment">     * &lt;p&gt;Title: jsonToList&lt;/p&gt;</span><span class="hljs-comment">     * &lt;p&gt;Description: &lt;/p&gt;</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> jsonData</span><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> beanType</span><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><span class="hljs-comment">     */</span>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt;<span class="hljs-function">List&lt;T&gt; <span class="hljs-title">jsonToList</span><span class="hljs-params">(String jsonData, Class&lt;T&gt; beanType)</span> </span>&#123;    JavaType javaType = MAPPER.getTypeFactory().constructParametricType(List.class, beanType);    <span class="hljs-keyword">try</span> &#123;    List&lt;T&gt; list = MAPPER.readValue(jsonData, javaType);    <span class="hljs-keyword">return</span> list;&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;e.printStackTrace();&#125;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    &#125;    &#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
